<%-include("./layout/header")%>
<style>
  #snackbar,
  #snackbar-error {
    visibility: hidden;
    min-width: 250px;
    margin-left: -125px;
    background-color: #333;
    color: #fff;
    text-align: center;
    border-radius: 2px;
    padding: 10px;
    position: fixed;
    z-index: 1;
    left: 50%;
    bottom: 30px;
    font-size: 17px;
    border-radius: 15px;
  }

  #snackbar.show,
  #snackbar-error.show {
    visibility: visible;
    -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
    animation: fadein 0.5s, fadeout 0.5s 2.5s;
  }

  @-webkit-keyframes fadein {
    from {
      bottom: 0;
      opacity: 0;
    }

    to {
      bottom: 30px;
      opacity: 1;
    }
  }

  @keyframes fadein {
    from {
      bottom: 0;
      opacity: 0;
    }

    to {
      bottom: 30px;
      opacity: 1;
    }
  }

  @-webkit-keyframes fadeout {
    from {
      bottom: 30px;
      opacity: 1;
    }

    to {
      bottom: 0;
      opacity: 0;
    }
  }

  @keyframes fadeout {
    from {
      bottom: 30px;
      opacity: 1;
    }

    to {
      bottom: 0;
      opacity: 0;
    }
  }

  .swal-confirm-button {
    background-color: gold !important;
  }

  .swal-cancel-button {
    background-color: red !important;
  }
</style>


<style>
  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type=number] {
    -moz-appearance: textfield;
  }
</style>



<div class="container-fluid d-flex gap-4 vh-100" style="background-color: #EDF1F5;">


  <section class="gradient-custom container-fluid ">
    <div class="container-fluid py-5 h-100 row justify-content-center align-items-center">
      <div class="col-12 col-lg-9 col-xl-8">
        <div class="card shadow-2-strong card-registration">
          <div class="card-body shadow" style="background-color: #EBEBEB;border-radius: 5px;">

            <form class="d-flex flex-column align-items-center mt-3" id="form">

              <div class="mb-4">
                <div class="fw-bold text-center fs-5 text-uppercase mb-1">Edit coupon</div>
              </div>

              <div class="col-md-6">

                <div class="form-outline mb-3">
                  <label class="form-label" for="expiryDate">Expiry Date</label>
                  <input type="date" id="expiryDate" name="expiryDate" style="box-shadow: none;" class="form-control" value="<%= expDate %>" required />
                </div>

                <div class="form-outline">
                  <label class="form-label" for="discount">Discount</label>
                  <input type="number" min="1" id="discount" name="discount" style="box-shadow: none;" class="form-control" value="<%= coupon.discount %>" required />
                </div>

                <input type="hidden" id="id" name="id" value="<%= coupon._id %>">

              </div>


              <button type="submit" style="background-color: #7FAD39;color: #fff;width: 200px;" class="btn fw-normal p-10 mb-3 mt-3">Add</button>

            </form>
          </div>
        </div>
      </div>
    </div>
  </section>
  <b id="snackbar-error">Coupon Name already Existed</b>



</div>



<!-- axios cdn -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.3/axios.min.js"></script>


<script>
  const form = document.getElementById('form');

  const id = document.getElementById('id');
  const discount = document.getElementById('discount');
  const expiryDate = document.getElementById('expiryDate');

  form.addEventListener('submit', (e) => {
    e.preventDefault();

    axios({
        method: "post",
        url: "/admin/coupon/edit",
        data: {
          id: id.value,
          discount: discount.value,
          expiryDate: new Date(expiryDate.value),
        }
      })
      .then((result) => {
        if (result.data.response) {
          location.href = "/admin/coupon"
        } else {
          let x = document.getElementById("snackbar-error");
          x.className = "show";
          setTimeout(function() {
            x.className = x.className.replace("show", "");
          }, 3000);
        }
      })

  })
</script>

<script>
  // Get the current date and format it as "YYYY-MM-DD" to match the input date format
  const currentDate = new Date().toISOString().split('T')[0];

  // Get the input element
  const endDateInput = document.getElementById('expiryDate');

  // Set the minimum attribute to the current date
  endDateInput.setAttribute('min', currentDate);
</script>

<%-include("./layout/footer.ejs")%>