<%-include("./layout/header")%>
<style>
  body {
    font-family: Arial, sans-serif;
    line-height: 1.6;
  }
  .not-visible {
    display: none;
  }
  /* Responsive styles */
  .card-body {
    text-align: center;
  }
  .image-area {
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid #ccc;
    border-radius: 5px;
    overflow: hidden;
  }
  .cropped-image-container {
    margin-top: 20px;
    text-align: center;
  }
  h4 {
    margin-bottom: 10px;
  }
  .btn-select-image {
    padding: 10px 20px;
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }
  .alert-box {
    margin-top: 10px;
  }
  .cropping-coordinates {
    margin-top: 10px;
    font-weight: bold;
  }
</style>
    <div class="col-9 col-md-9 col-sm-9 mx-5 container">
      <div class="container py-5 mt-5" style="height: 500px">
        <div class="row d-flex justify-content-center align-items-center h-100">
          <div class="col-lg-8 col-xl-6">
            <div class="card rounded-3">
              <form
                id="form"
                class="px-md-2  m-3"
                enctype="multipart/form-data"
              >
                <div class="row mb-4 mt-2 mx-auto py-5">
                  <div class="d-flex justify-content-center fs-3 ">
                    <label class="form-label pt-2" for="form3Example1q"
                      >Enter Category Name</label
                    >
                  </div>
                  <div class="d-flex px-2 mx-2 justify-content-center mx-auto col-md-8">
                    <input
                      type="text"
                      id="name"
                      class="form-control"
                      name="name"
                      placeholder="Enter Category Name"
                      required
                    />
                  </div>
                </div>

                <div class="row mb-4">
                
                    
                </div>
                <p class="text-danger bg-alert" ><%=message%></p>
                <div id="alert-box"></div> 

                <div class="d-flex justify-content-center mb-5">
                  <button
                  type="button"
                    id="confirm-btn"
                    style="background-color: #88C8BC; width: 200px"
                    class="btn align-items-center p-2"
                  >
                    Confirm
                  </button>
                </div>
              </form>
            </div>
          </div>
          <div class="container col-4 ">
            <div class="card my-2 px-2 py-2 mx-2" style="width: 100%;">
              <img id="cropped-image0" src="https://infinitebook.com/wp-content/uploads/woocommerce-placeholder-350x350.png" class="card-img-top" alt="https://infinitebook.com/wp-content/uploads/woocommerce-placeholder-350x350.png">
              <div class="card-body d-flex justify-content-between">
                <div class="form-group">
                  <input
                    name="image_0"
                    class="form-control d-none"
                    type="file"
                    accept="image/*"
                    onchange="uploadPhotosChanged('0')"
                  />
                  
                  <button type="button" class="btn btn-success" onclick="selectImage('1')">Add Photo</button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>


                <!-- Modal -->
                <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                      <!-- Modal content goes here -->
                      <div class="modal-header">
                        <h5 class="modal-title" id="myModalLabel">Modal Title</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                      </div>
                      <div class="modal-body ">
                        <div class=" mx-auto col-lg-6">
                        <div class="image-area mb-3 container ">
                          <div  id="cropper-container"></div>
                        </div>
                      </div>
                      </div>
                      <div class="modal-footer">
                        <!-- <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button> -->
                        <!-- <button type="button" id="save-changes-btn" class="btn btn-primary">Save changes</button> -->
                      </div>
                    </div>
                  </div>
                </div>

                <!-- Include Bootstrap and jQuery -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.min.js"></script>

<script>

  const confirmBtn = document.getElementById("confirm-btn");
  const form = document.getElementById("form");    
  const modal = new bootstrap.Modal(document.getElementById('myModal'));
  const imageBox = document.getElementById("cropper-container");
  let cropper;
  let formData = new FormData(form);
  let selectedImages = [];
  let croppedImages = [];
  let cropperInstances ;


  function debounce(func, delay) {
    let timer;
    return function (...args) {
      clearTimeout(timer);
      timer = setTimeout(() => {
        func.apply(this, args);
      }, delay);
    };
  }

  function uploadPhotosChanged(i) {   
    const imageInput = document.querySelector(`input[name="image_${i}"]`);
    const btnRemove = document.getElementById(`cropped-Btn${i}`);
    const fileInput = document.querySelector(`input[name="image_${i}"]`);


      if (fileInput.files.length>0) {
        // If files are selected, open the modal
        const img_data = fileInput.files[0];
        selectedImages[i]=fileInput.files[0];
        const url = URL.createObjectURL(img_data);

        // btnRemove.classList.remove("d-none")

        imageBox.innerHTML = `<img src="${url}" id="image" class="img-fluid" >`;
        imageBox.class="container-fluid"
        modal.show();
      }else{
        modal.hide()
      }
      var $image = $("#image");
      
      $image.on("load", function () {
         cropper = new Cropper($image[0], {
          aspectRatio: 500  / 500 ,
          viewMode: 1,
          strict: true,
          zoomable: true,
          crop: debounce(function (event) {
            console.log("Cropping...");
            let cropperData = cropper.getData();
            const x = Math.round(cropperData.x);
            const y = Math.round(cropperData.y);
            const width = Math.round(cropperData.width);
            const height = Math.round(cropperData.height);
            const coordinates = `X: ${x}, Y: ${y}, Width: ${width}, Height: ${height}`;
            

            croppedCanvas = cropper.getCroppedCanvas({width: 1200, height: 1486})
            croppedImage = document.getElementById(`cropped-image${i}`)
            croppedImage.src = croppedCanvas.toDataURL()
            // for(let k=0 ; k <cropperInstances.length ; k ++){
            //   if(cropperInstances[k].name)
            // }
            croppedCanvas.toBlob((blob) => {
              cropperInstances = blob;
            }, 'image/png');
          },500),
          ready: function () {
            console.log("Cropper is ready to be used.");
          },
          plugins: [
            'crop', // Add the 'crop' plugin for cropping functionality
            'resize' // Add the 'resize' plugin for resizing functionality
          ],
          cropend: function (event) {
            console.log("Cropping ended.");
          },
          resize: function (event) {
            console.log("Resizing...");
          }
        });
      });
        
  }

  const alertBox = document.getElementById("alert-box");
  
  confirmBtn.addEventListener("click", async (e) => {
          e.preventDefault()
          let check = await checkField()
          // const blobPromises = [];
          console.log(cropperInstances);
        try {
         if (check) {
          formData = new FormData(form);
            
            formData.append(`image`, cropperInstances, `cropped-image-0.png`);
            // formData.append(`images`, cropperInstances[1], `cropped-image-1.png`);
            // formData.append(`images`, cropperInstances[2], `cropped-image-2.png`);
            // formData.append(`images`, cropperInstances[3], `cropped-image-3.png`);
            // console.log([...formData]);
                
                $.ajax({
                      type: "POST",
                      url: "/admin/category/add",
                      enctype: "multipart/form-data",
                      data: formData,
                      processData: false,
                      contentType: false,
                      success: function (response) {
                      console.log('Upload success:', response);
                      if(response.data==true){
                        window.location.href = '/admin/category'
                      }else if(response.data=="duplicate"){
                        alertBox.innerHTML = `<div class="alert alert-danger" role="alert">
                                Ops...Category name Exists
                              </div>`;
                      }else{
                        alertBox.innerHTML = `<div class="alert alert-danger" role="alert">
                                Ops...something went wrong
                              </div>`;
                      }

                      // Rest of your code...
                    },
                    error: function (error) {
                      console.log('Upload error:', error);
                      // Rest of your code...
                    },
                  cache: false,
                });  
                
            // }
          // }
         }
        }catch(error){
            console.error("Error:", error);
            alertBox.innerHTML = `<div class="alert alert-danger" role="alert">
                                Ups...something went wrong
                              </div>`;
        }
    } );
function checkField(){
  // const requiredFields = ["name"];
  let formIsValid = true;

  // requiredFields.forEach((fieldName) => {
    const field = document.querySelector(`[name="name"]`);
    console.log(field);
    if (!field.value) {
      formIsValid = false;
      alertBox.innerHTML = `<div class="alert alert-danger" role="alert">Please fill in all required fields.</div>`;
    }else{
      alertBox.innerHTML = "";
    }
    if (!formIsValid) {
        return false;
    }
  // });

  if (formIsValid) {
    
    return true;
  }else{
    return false;
  }
}
function selectImage(i) {
      const fileInput = document.querySelector(`input[name="image_0"]`);
    fileInput.click();
    }
</script>
<%-include("./layout/footer.ejs")%>
